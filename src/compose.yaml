services:
  admin:
    container_name: socketheadcleanarch.admin
    image: socketheadcleanarch.admin
    build:
      context: .
      dockerfile: SocketheadCleanArch.Admin/Dockerfile
    ports:
      - "5001:8080"
    env_file:
      - .docker.env
    volumes:
      - dataprotection_keys:/home/app/.aspnet/DataProtection-Keys
    depends_on:
      db:
        condition: service_healthy
    networks:
      - sockethead-network

  api:
    container_name: socketheadcleanarch.api
    image: socketheadcleanarch.api
    build:
      context: .
      dockerfile: SocketheadCleanArch.API/Dockerfile
    ports:
      - "5002:8080"
    env_file:
      - .docker.env
    volumes:
      - dataprotection_keys:/home/app/.aspnet/DataProtection-Keys
    depends_on:
      db:
        condition: service_healthy
    networks:
      - sockethead-network

  db:
    container_name: socketheadcleanarch.db
    image: postgres:17
    ports:
      - "5432:5432"
    env_file:
      - .docker.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d SocketheadCleanArchDb"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - sockethead-network

volumes:
  postgres_data:
    name: sockethead_postgres_data
  dataprotection_keys:
    name: sockethead_dataprotection_keys

networks:
  sockethead-network:
    name: sockethead-network
    driver: bridge
